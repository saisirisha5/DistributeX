{"ast":null,"code":"var _jsxFileName = \"D:\\\\DistributeX\\\\DistributeX\\\\client\\\\src\\\\pages\\\\Teacher\\\\TeacherDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport LocationPicker from '../../components/LocationPicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeacherDashboard = () => {\n  _s();\n  const [tests, setTests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [places, setPlaces] = useState([{\n    name: '',\n    lat: 0,\n    lng: 0\n  }]);\n  const [formData, setFormData] = useState({\n    name: '',\n    isPremium: false,\n    threshold: 10,\n    dateSlots: [{\n      date: '',\n      slots: [{\n        startTime: '',\n        endTime: '',\n        limit: 5\n      }]\n    }],\n    places: [{\n      name: '',\n      lat: '',\n      lng: ''\n    }]\n  });\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const fetchTests = async () => {\n      try {\n        const res = await api.get('/test/my-tests');\n        setTests(res.data.tests);\n      } catch (error) {\n        console.error('Failed to load tests', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTests();\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n\n  // Handlers for dateSlots and places additions/changes\n  const updateDateSlot = (index, field, value) => {\n    const newDateSlots = [...formData.dateSlots];\n    newDateSlots[index][field] = value;\n    setFormData(prev => ({\n      ...prev,\n      dateSlots: newDateSlots\n    }));\n  };\n  const updateSlotInDate = (dateIndex, slotIndex, field, value) => {\n    const newDateSlots = [...formData.dateSlots];\n    newDateSlots[dateIndex].slots[slotIndex][field] = value;\n    setFormData(prev => ({\n      ...prev,\n      dateSlots: newDateSlots\n    }));\n  };\n  const addDateSlot = () => {\n    if (formData.dateSlots.length < 3) {\n      setFormData(prev => ({\n        ...prev,\n        dateSlots: [...prev.dateSlots, {\n          date: '',\n          slots: [{\n            startTime: '',\n            endTime: '',\n            limit: 5\n          }]\n        }]\n      }));\n    }\n  };\n  const addSlotToDate = dateIndex => {\n    const newDateSlots = [...formData.dateSlots];\n    newDateSlots[dateIndex].slots.push({\n      startTime: '',\n      endTime: '',\n      limit: 5\n    });\n    setFormData(prev => ({\n      ...prev,\n      dateSlots: newDateSlots\n    }));\n  };\n  const updatePlace = (index, field, value) => {\n    const newPlaces = [...formData.places];\n    newPlaces[index][field] = value;\n    setFormData(prev => ({\n      ...prev,\n      places: newPlaces\n    }));\n  };\n  const addPlace = () => {\n    if (formData.places.length < 4) {\n      setFormData(prev => ({\n        ...prev,\n        places: [...prev.places, {\n          name: '',\n          lat: '',\n          lng: ''\n        }]\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate dates, times, lat/lng etc here if you want\n\n    // Format lat/lng as numbers\n    const formattedPlaces = places.map(p => ({\n      ...p,\n      lat: Number(p.lat),\n      lng: Number(p.lng)\n    }));\n    try {\n      const res = await api.post('/test/create', {\n        name: formData.name,\n        isPremium: formData.isPremium,\n        threshold: Number(formData.threshold),\n        dateSlots: formData.dateSlots.map(ds => ({\n          date: ds.date,\n          slots: ds.slots.map(s => ({\n            startTime: s.startTime,\n            endTime: s.endTime,\n            limit: Number(s.limit)\n          }))\n        })),\n        places: formattedPlaces\n      });\n      setMessage('Test created successfully!');\n      setShowForm(false);\n      // Refresh tests list\n      const testsRes = await api.get('/test/my-tests');\n      setTests(testsRes.data.tests);\n    } catch (error) {\n      console.error('Failed to create test', error);\n      setMessage('Failed to create test. Try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Created Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this) : tests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tests created yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tests.map(test => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: test.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), \" - Premium: \", test.isPremium ? 'Yes' : 'No', \" - Threshold: \", test.threshold]\n      }, test._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowForm(!showForm),\n      style: {\n        marginTop: '20px'\n      },\n      children: showForm ? 'Cancel' : 'Create New Test'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        marginTop: '20px',\n        border: '1px solid #ccc',\n        padding: '15px',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Test Name: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Premium Test:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"isPremium\",\n            checked: formData.isPremium,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Threshold (max students):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"threshold\",\n            min: \"1\",\n            value: formData.threshold,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Date Slots (up to 3 dates)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), formData.dateSlots.map((ds, dateIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px',\n          paddingLeft: '10px',\n          borderLeft: '3px solid #ccc'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Date: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: ds.date,\n            onChange: e => updateDateSlot(dateIndex, 'date', e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Slots:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this), ds.slots.map((slot, slotIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Start Time: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              value: slot.startTime,\n              onChange: e => updateSlotInDate(dateIndex, slotIndex, 'startTime', e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginLeft: '10px'\n            },\n            children: [\"End Time: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              value: slot.endTime,\n              onChange: e => updateSlotInDate(dateIndex, slotIndex, 'endTime', e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginLeft: '10px'\n            },\n            children: [\"Limit:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              value: slot.limit,\n              onChange: e => updateSlotInDate(dateIndex, slotIndex, 'limit', e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 19\n          }, this)]\n        }, slotIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => addSlotToDate(dateIndex),\n          children: \"+ Add Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this)]\n      }, dateIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this)), formData.dateSlots.length < 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addDateSlot,\n        children: \"+ Add Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Places (up to 4)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Pick places on the map (click to add):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(LocationPicker, {\n        places: places,\n        setPlaces: setPlaces\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 3\n      }, this), places.map((p, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Place name\",\n          value: p.name,\n          onChange: e => {\n            const newPlaces = [...places];\n            newPlaces[i].name = e.target.value;\n            setPlaces(newPlaces);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Lat: \", p.lat.toFixed(4), \", Lng: \", p.lng.toFixed(4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 7\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 5\n      }, this)), formData.places.length < 4 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addPlace,\n        children: \"+ Add Place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(TeacherDashboard, \"ZC7AHPBag5GYfSE0Gsr5TeN/PG0=\");\n_c = TeacherDashboard;\nexport default TeacherDashboard;\nvar _c;\n$RefreshReg$(_c, \"TeacherDashboard\");","map":{"version":3,"names":["React","useEffect","useState","api","LocationPicker","jsxDEV","_jsxDEV","TeacherDashboard","_s","tests","setTests","loading","setLoading","showForm","setShowForm","places","setPlaces","name","lat","lng","formData","setFormData","isPremium","threshold","dateSlots","date","slots","startTime","endTime","limit","message","setMessage","fetchTests","res","get","data","error","console","handleInputChange","e","value","type","checked","target","prev","updateDateSlot","index","field","newDateSlots","updateSlotInDate","dateIndex","slotIndex","addDateSlot","length","addSlotToDate","push","updatePlace","newPlaces","addPlace","handleSubmit","preventDefault","formattedPlaces","map","p","Number","post","ds","s","testsRes","children","fileName","_jsxFileName","lineNumber","columnNumber","test","_id","onClick","style","marginTop","onSubmit","border","padding","borderRadius","onChange","required","min","marginBottom","paddingLeft","borderLeft","slot","marginLeft","i","placeholder","toFixed","_c","$RefreshReg$"],"sources":["D:/DistributeX/DistributeX/client/src/pages/Teacher/TeacherDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../../services/api';\r\nimport LocationPicker from '../../components/LocationPicker'; \r\n\r\n\r\nconst TeacherDashboard = () => {\r\n  const [tests, setTests] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [places, setPlaces] = useState([{ name: '', lat: 0, lng: 0 }]);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    isPremium: false,\r\n    threshold: 10,\r\n    dateSlots: [\r\n      { date: '', slots: [{ startTime: '', endTime: '', limit: 5 }] },\r\n    ],\r\n    places: [{ name: '', lat: '', lng: '' }],\r\n  });\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTests = async () => {\r\n      try {\r\n        const res = await api.get('/test/my-tests');\r\n        setTests(res.data.tests);\r\n      } catch (error) {\r\n        console.error('Failed to load tests', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchTests();\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    }));\r\n  };\r\n\r\n  // Handlers for dateSlots and places additions/changes\r\n  const updateDateSlot = (index, field, value) => {\r\n    const newDateSlots = [...formData.dateSlots];\r\n    newDateSlots[index][field] = value;\r\n    setFormData((prev) => ({ ...prev, dateSlots: newDateSlots }));\r\n  };\r\n\r\n  const updateSlotInDate = (dateIndex, slotIndex, field, value) => {\r\n    const newDateSlots = [...formData.dateSlots];\r\n    newDateSlots[dateIndex].slots[slotIndex][field] = value;\r\n    setFormData((prev) => ({ ...prev, dateSlots: newDateSlots }));\r\n  };\r\n\r\n  const addDateSlot = () => {\r\n    if (formData.dateSlots.length < 3) {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        dateSlots: [...prev.dateSlots, { date: '', slots: [{ startTime: '', endTime: '', limit: 5 }] }],\r\n      }));\r\n    }\r\n  };\r\n\r\n  const addSlotToDate = (dateIndex) => {\r\n    const newDateSlots = [...formData.dateSlots];\r\n    newDateSlots[dateIndex].slots.push({ startTime: '', endTime: '', limit: 5 });\r\n    setFormData((prev) => ({ ...prev, dateSlots: newDateSlots }));\r\n  };\r\n\r\n  const updatePlace = (index, field, value) => {\r\n    const newPlaces = [...formData.places];\r\n    newPlaces[index][field] = value;\r\n    setFormData((prev) => ({ ...prev, places: newPlaces }));\r\n  };\r\n\r\n  const addPlace = () => {\r\n    if (formData.places.length < 4) {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        places: [...prev.places, { name: '', lat: '', lng: '' }],\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate dates, times, lat/lng etc here if you want\r\n\r\n    // Format lat/lng as numbers\r\n    const formattedPlaces = places.map((p) => ({\r\n  ...p,\r\n  lat: Number(p.lat),\r\n  lng: Number(p.lng),\r\n}));\r\n\r\n\r\n\r\n    try {\r\n      const res = await api.post('/test/create', {\r\n        name: formData.name,\r\n        isPremium: formData.isPremium,\r\n        threshold: Number(formData.threshold),\r\n        dateSlots: formData.dateSlots.map((ds) => ({\r\n          date: ds.date,\r\n          slots: ds.slots.map((s) => ({\r\n            startTime: s.startTime,\r\n            endTime: s.endTime,\r\n            limit: Number(s.limit),\r\n          })),\r\n        })),\r\n         places: formattedPlaces,\r\n      });\r\n      setMessage('Test created successfully!');\r\n      setShowForm(false);\r\n      // Refresh tests list\r\n      const testsRes = await api.get('/test/my-tests');\r\n      setTests(testsRes.data.tests);\r\n    } catch (error) {\r\n      console.error('Failed to create test', error);\r\n      setMessage('Failed to create test. Try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Your Created Tests</h2>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : tests.length === 0 ? (\r\n        <p>No tests created yet.</p>\r\n      ) : (\r\n        <ul>\r\n          {tests.map((test) => (\r\n            <li key={test._id}>\r\n              <strong>{test.name}</strong> - Premium: {test.isPremium ? 'Yes' : 'No'} - Threshold: {test.threshold}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      <button onClick={() => setShowForm(!showForm)} style={{ marginTop: '20px' }}>\r\n        {showForm ? 'Cancel' : 'Create New Test'}\r\n      </button>\r\n\r\n      {showForm && (\r\n        <form onSubmit={handleSubmit} style={{ marginTop: '20px', border: '1px solid #ccc', padding: '15px', borderRadius: '8px' }}>\r\n          <div>\r\n            <label>\r\n              Test Name: <br />\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              Premium Test:\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"isPremium\"\r\n                checked={formData.isPremium}\r\n                onChange={handleInputChange}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              Threshold (max students):\r\n              <input\r\n                type=\"number\"\r\n                name=\"threshold\"\r\n                min=\"1\"\r\n                value={formData.threshold}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <h4>Date Slots (up to 3 dates)</h4>\r\n          {formData.dateSlots.map((ds, dateIndex) => (\r\n            <div key={dateIndex} style={{ marginBottom: '15px', paddingLeft: '10px', borderLeft: '3px solid #ccc' }}>\r\n              <label>\r\n                Date: <br />\r\n                <input\r\n                  type=\"date\"\r\n                  value={ds.date}\r\n                  onChange={(e) => updateDateSlot(dateIndex, 'date', e.target.value)}\r\n                  required\r\n                />\r\n              </label>\r\n\r\n              <h5>Slots:</h5>\r\n              {ds.slots.map((slot, slotIndex) => (\r\n                <div key={slotIndex} style={{ marginBottom: '10px' }}>\r\n                  <label>\r\n                    Start Time: <br />\r\n                    <input\r\n                      type=\"time\"\r\n                      value={slot.startTime}\r\n                      onChange={(e) => updateSlotInDate(dateIndex, slotIndex, 'startTime', e.target.value)}\r\n                      required\r\n                    />\r\n                  </label>\r\n\r\n                  <label style={{ marginLeft: '10px' }}>\r\n                    End Time: <br />\r\n                    <input\r\n                      type=\"time\"\r\n                      value={slot.endTime}\r\n                      onChange={(e) => updateSlotInDate(dateIndex, slotIndex, 'endTime', e.target.value)}\r\n                      required\r\n                    />\r\n                  </label>\r\n\r\n                  <label style={{ marginLeft: '10px' }}>\r\n                    Limit:\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      value={slot.limit}\r\n                      onChange={(e) => updateSlotInDate(dateIndex, slotIndex, 'limit', e.target.value)}\r\n                      required\r\n                    />\r\n                  </label>\r\n                </div>\r\n              ))}\r\n\r\n              <button type=\"button\" onClick={() => addSlotToDate(dateIndex)}>\r\n                + Add Slot\r\n              </button>\r\n            </div>\r\n          ))}\r\n\r\n          {formData.dateSlots.length < 3 && (\r\n            <button type=\"button\" onClick={addDateSlot}>\r\n              + Add Date\r\n            </button>\r\n          )}\r\n\r\n          <hr />\r\n\r\n          <h4>Places (up to 4)</h4>\r\n           <h4>Pick places on the map (click to add):</h4>\r\n  <LocationPicker places={places} setPlaces={setPlaces} />\r\n  {places.map((p, i) => (\r\n    <div key={i}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Place name\"\r\n        value={p.name}\r\n        onChange={(e) => {\r\n          const newPlaces = [...places];\r\n          newPlaces[i].name = e.target.value;\r\n          setPlaces(newPlaces);\r\n        }}\r\n        required\r\n      />\r\n      <span>Lat: {p.lat.toFixed(4)}, Lng: {p.lng.toFixed(4)}</span>\r\n    </div>\r\n  ))}\r\n\r\n          {formData.places.length < 4 && (\r\n            <button type=\"button\" onClick={addPlace}>\r\n              + Add Place\r\n            </button>\r\n          )}\r\n\r\n          <hr />\r\n\r\n          <button type=\"submit\">Create Test</button>\r\n\r\n          {message && <p>{message}</p>}\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeacherDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}