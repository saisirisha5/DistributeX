{"ast":null,"code":"var _jsxFileName = \"D:\\\\DistributeX\\\\DistributeX\\\\client\\\\src\\\\pages\\\\Teacher\\\\TeacherDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeacherDashboard = () => {\n  _s();\n  const [tests, setTests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchTests = async () => {\n      try {\n        const res = await api.get('/test/my-tests');\n        setTests(res.data.tests);\n      } catch (error) {\n        console.error('Failed to load tests', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTests();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading your tests...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  if (tests.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"You have no tests created yet.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 34\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Created Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tests.map(test => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: test.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {\n          children: [\"- Premium: \", test.isPremium ? 'Yes' : 'No', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 42\n        }, this), \"- Threshold: \", test.threshold]\n      }, test._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TeacherDashboard, \"wIXWSVwHbrtgkLqSWYI/rfyJWQo=\");\n_c = TeacherDashboard;\nexport default TeacherDashboard;\nvar _c;\n$RefreshReg$(_c, \"TeacherDashboard\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","TeacherDashboard","_s","tests","setTests","loading","setLoading","fetchTests","res","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","test","name","isPremium","threshold","_id","_c","$RefreshReg$"],"sources":["D:/DistributeX/DistributeX/client/src/pages/Teacher/TeacherDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../../services/api';\r\n\r\nconst TeacherDashboard = () => {\r\n  const [tests, setTests] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchTests = async () => {\r\n      try {\r\n        const res = await api.get('/test/my-tests');\r\n        setTests(res.data.tests);\r\n      } catch (error) {\r\n        console.error('Failed to load tests', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTests();\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading your tests...</p>;\r\n  if (tests.length === 0) return <p>You have no tests created yet.</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Your Created Tests</h2>\r\n      <ul>\r\n        {tests.map((test) => (\r\n          <li key={test._id}>\r\n            <strong>{test.name}</strong> <br>- Premium: {test.isPremium ? 'Yes' : 'No'} </br>- Threshold: {test.threshold}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeacherDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,gBAAgB,CAAC;QAC3CL,QAAQ,CAACI,GAAG,CAACE,IAAI,CAACP,KAAK,CAAC;MAC1B,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,SAAS;QACRL,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE,oBAAOL,OAAA;IAAAa,QAAA,EAAG;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAChD,IAAId,KAAK,CAACe,MAAM,KAAK,CAAC,EAAE,oBAAOlB,OAAA;IAAAa,QAAA,EAAG;EAA8B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEpE,oBACEjB,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BjB,OAAA;MAAAa,QAAA,EACGV,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACdpB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAASO,IAAI,CAACC;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,KAAC,eAAAjB,OAAA;UAAAa,QAAA,GAAI,aAAW,EAACO,IAAI,CAACE,SAAS,GAAG,KAAK,GAAG,IAAI,EAAC,GAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,iBAAa,EAACG,IAAI,CAACG,SAAS;MAAA,GADtGH,IAAI,CAACI,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CAlCID,gBAAgB;AAAAwB,EAAA,GAAhBxB,gBAAgB;AAoCtB,eAAeA,gBAAgB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}